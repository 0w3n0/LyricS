<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Top Tracks</title>
    <!-- <link rel="stylesheet" href="/css/main.css">
    <link rel="stylesheet" href="/css/home.css"> -->
    <link rel="stylesheet" href="/css/h.css">
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css" />

</head>

<body>
    <%- include('header.ejs') %>
        <div class="track-image-details" id="t-i-d-radar">
            <h2 id="h2-radar">Radar de sorties</h2>
            <h4 id="h4-radar">Retrouvez les dernières sorties de vos artistes favoris en tout simplicité.</h4>

            <div id="preview-radar">
                <% let foundFirstAlbum = false; %>
                <div class="artists-container-home">
                    <% albumsByArtist.forEach(artist => { %>
                        <% if (artist && artist.length > 0 && !foundFirstAlbum) { %>
                            <% const albumsOfType = artist.filter(album => album.album_type === 'album'); %>
                            <% if (albumsOfType.length > 0) { %>
                                <% albumsOfType.forEach(album => { %>
                                    <div class="artist-home">
                                        <div class="artist-image">
                                            <img src="<%= album.images[0].url %>" alt="<%= album.name %>">
                                        </div>
                                        <div>
                                            <h2><%= album.name %></h2> 
                                            <h2 class="artist-name">
                                                <h3><a href="/artist/<%= album.artists[0].id %>"><%= album.artists[0].name %></a></h3> 
                                            </h2> 
                                        </div>
                                    </div>
                                    <% foundFirstAlbum = true; %>
                                <% }); %>
                            <% } %>
                        <% } %>
                    <% }); %>
                </div>
                
                <% let foundFirstSingle = false; %>
                <div class="artists-container-home">
                    <% albumsByArtist.forEach(artist => { %>
                        <% if (artist && artist.length > 0) { %>
                            <% const albumsOfType = artist.filter(album => album.album_type === 'single'); %>
                            <% if (albumsOfType.length > 0) { %>
                                <% albumsOfType.forEach(album => { %>
                                    <% if (!foundFirstSingle) { %>
                                        <div class="artist-home">
                                            <div class="artist-image">
                                                <img src="<%= album.images[0].url %>" alt="<%= album.name %>">
                                            </div>
                                            <div>
                                                <h2><%= album.name %></h2> 
                                                <h2 class="artist-name">
                                                    <h3><a href="/artist/<%= album.artists[0].id %>"><%= album.artists[0].name %></a></h3> 
                                                </h2> 
                                            </div>
                                        </div>
                                        <% foundFirstSingle = true; %>
                                    <% } else { %>
                                    <% } %>
                                <% }); %>
                            <% } %>
                        <% } %>
                    <% }); %>
                </div>        

                <% let foundFirstEp = false; %>
                <div class="artists-container-home">
                    <% albumsByArtist.forEach(artist => { %>
                        <% if (artist && artist.length > 0 && !foundFirstEp) { %>
                            <% const albumsOfType = artist.filter(album => album.album_type === 'single'); %>
                            <% if (albumsOfType.length > 0) { %>
                                <% albumsOfType.forEach(album => { %>
                                    <% if (album.total_tracks> 3) { %>
                                        <div class="artist-home">
                                            <div class="artist-image">
                                                <img src="<%= album.images[0].url %>" alt="<%= album.name %>">
                                            </div>
                                            <div>
                                                <h2><%= album.name %></h2> 
                                                <h2 class="artist-name">
                                                    <h3><a href="/artist/<%= album.artists[0].id %>"><%= album.artists[0].name %></a></h3> 
                                                </h2> 
                                            </div>
                                        </div>
                                        <% foundFirstEp = true; %>
                                    <% } %>
                                <% }); %>
                            <% } %>
                        <% } %>
                    <% }); %>
                </div>        
            </div>
        </div>
        <main>
            
            

            <div class="tracks-container" style="min-height: 100vh;">

                <button id="yourAddToPlaylistIconId">JE SUIS UN BOUTON POUR CREER TA PLAYLIST HIHI</button>

                <h2>Albums récents des artistes que vous suivez :</h2>

                <div id="btn-switch-holder">
                    <div class="cbDiv">
                        <input type="checkbox" id="singlecontainerCheckbox" checked>
                        <label class="checkbox-container" for="singleCheckbox" id="singleCheckboxContainer">Singles</label>
                    </div>
                    
                    <div class="cbDiv">
                        <input type="checkbox" id="albumcontainerCheckbox" checked>
                        <label class="checkbox-container" for="albumCheckbox" id="albumCheckboxContainer">Albums</label>
                    </div>
                    
                    <div class="cbDiv">
                        <input type="checkbox" id="epcontainerCheckbox" checked>
                        <label class="checkbox-container" for="epCheckbox" id="epCheckboxContainer">EPs</label>
                    </div>
                </div>

                <% const albumTypes={ 'album' : 'Albums' , 'single' : 'Singles' , 'compilation' : 'Compilations' , 'appears_on' : 'Apparitions' }; %>
                    
                <div id="albumcontainer" class="album-container animate__animated animate__fadeIn">
                    <h2>Albums</h2>
                    <% albumsByArtist.forEach(artist => { %>
                        <% if (artist && artist.length > 0) { %>
                            <% const albumsOfType = artist.filter(album => album.album_type === 'album'); %>
                            <% if (albumsOfType.length > 0) { %>
                                <% albumsOfType.forEach(album => { %>
                                    <div class="album-preset">
                                        <div class="album-preset-image">
                                            <img src="<%= album.images[0].url %>" alt="<%= album.name %>">
                                        </div>
                                        <div class="album-preset-info">
                                            <h2><%= album.name %></h2>
                                            <i class="menu-icon ion-md-home"></i>
                                            <span class="menu-name"><i class="material-icons recupDatasInsert" data-id="<%= album.id %>" onclick="addAlbumToPlaylist('<%= album.id %>')">playlist</i></span>
                                            <h3><a href="/artist/<%= album.artists[0].id %>"><%= album.artists[0].name %></a></h3>
                                            <h4><%= album.release_date %></h4>
                                            <div class="tracks-section">
        
                                                <!-- Affichez les cinq premières pistes -->
                                                <ul class="track-list">
                                                    <% album.tracks.slice(0, 5).forEach(track=> { %>
                                                        <li>
                                                            <a href="/track/<%= track.id %>"><%= track.name %></a>
                                                        </li>
                                                    <% }); %>
                                                </ul>
        
                                                <!-- Affichez le reste des pistes dans la div cachée -->
                                                <div class="hidden-tracks">
                                                    <ul>
                                                        <% album.tracks.slice(5).forEach(track=> { %>
                                                            <li>
                                                                <a href="/track/<%= track.id %>"><%= track.name %></a>
                                                            </li>
                                                        <% }); %>
                                                    </ul>
                                                </div>
        
                                                <!-- Ajoutez un bouton "Afficher plus" -->
                                                <div class="btn-center-div">
                                                    <button class="show-more-button" onclick="toggleTracks(this)">
                                                        <div class="button-content">
                                                            <span>Afficher plus</span>
                                                            <i class="material-icons" id="arrow-icon">keyboard_arrow_down</i>
                                                        </div>
                                                    </button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                <% }); %>
                            <% } %>
                        <% } %>
                    <% }); %>
                </div>
                
                <div id="singlecontainer" class="single-container animate__animated animate__fadeIn">
                    <h2>Singles</h2>
                    <% albumsByArtist.forEach(artist => { %>
                        <% if (artist && artist.length > 0) { %>            
                            <% const singlesOfType = artist.filter(album => album.album_type === 'single'); %>               
                            <% if (singlesOfType.length > 0) { %>                
                                <% singlesOfType.forEach(single => { %>                
                                    <% if (single.total_tracks == 1) { %>
                                        <% const trackIds = single.trackIds; 
                                        console.log(`Voici les ids de l'single ${single.name} : ${trackIds}`);%>
                                        <div class="track">
                                            <div class="track-image">
                                                <img src="<%= single.images[0].url %>" alt="<%= single.name %>">
                                            </div>
                                            <div class="track-info">
                                                <% single.tracks.slice(0, 5).forEach(track=> { %>
                                                    <li>
                                                        <a href="/track/<%= track.id %>"><h2>
                                                            <%= track.name %>
                                                        </h2></a>
                                                    </li>
                                                <% }); %>
                                                <% if (single.artists.length> 1) { %>
                                                    <% single.artists.forEach((artist, index)=> { %>
                                                        <% if (index===1) { %>
                                                            ft. <a href="/artist/<%= artist.id %>"><%= artist.name %></a>
                                                        <% } else if (index===2) { %>
                                                            , <a href="/artist/<%= artist.id %>"><%= artist.name %></a>
                                                        <% } else if (index===0) { %>
                                                            <p>
                                                                <a href="/artist/<%= artist.id %>"><%= artist.name %></a>
                                                        <% } %>
                                                    <% }); %>
                                                        - <%= single.name %>
                                                    </p>
                                                <% } else { %>
                                                        <p>
                                                            <a href="/artist/<%= single.artists[0].id %>"><%= single.artists[0].name %></a> - <%= single.name %>
                                                        </p>
                                                <% } %>
                                            </div>
                                            <div>
                                                <i class="menu-icon ion-md-home"></i>
                                                <span class="menu-name"><i class="material-icons recupDatasInsert" data-id="<%= single.id %>" onclick="addAlbumToPlaylist('<%= single.id %>')">playlist</i></span>
                                            </div>
                                        </div>
                                    <% } %>
                                <% }); %>
                            <% } %>
                        <% } %>
                    <% }); %>

                    
                </div>

                <div id="epcontainer" class="EP-container animate__animated animate__fadeIn">
                    <h2>EPs</h2>
                    <% albumsByArtist.forEach(artist => { %>
                        <% if (artist && artist.length > 0) { %>
                            <% const EpsOfType = artist.filter(album => album.album_type === 'single'); %>
                            <% if (EpsOfType.length > 0) { %>
                                <% EpsOfType.forEach(ep => { %>
                                    <% if (ep.total_tracks> 1) { %>
                                        <% const trackIds = ep.trackIds; 
                                        console.log(`Voici les ids de l'ep ${ep.name} : ${trackIds}`);%>
                                        <div class="album-preset">
                                            <div class="album-preset-image">
                                                <img src="<%= ep.images[0].url %>" alt="<%= ep.name %>">
                                                <i class="menu-icon ion-md-home"></i>
                                                <span class="menu-name"><i class="material-icons recupDatasInsert" data-id="<%= ep.id %>" onclick="addAlbumToPlaylist('<%= ep.id %>')">playlist</i></span>
                                            </div>
                                            <div class="album-preset-info">
                                                <h2><%= ep.name %></h2> <h3><a href="/artist/<%= ep.artists[0].id %>"><%= ep.artists[0].name %></a></h3>   <h4><%= ep.release_date %></h4>
                                                <div class="tracks-section">
                                                    <!-- Affichez les cinq premières pistes -->
                                                    <ul class="track-list">
                                                        <% ep.tracks.slice(0, 5).forEach(track=> { %>
                                                            <li>
                                                                <a href="/track/<%= track.id %>"><%= track.name %></a>
                                                            </li>
                                                        <% }); %>
                                                    </ul>
        
                                                    <% if (ep.total_tracks > 5) { %> <!-- Affichez le reste des pistes dans la div cachée -->
                                                        <div class="hidden-tracks">
                                                            <ul>
                                                                <% ep.tracks.slice(5).forEach(track=> { %>
                                                                    <li>
                                                                        <a href="/track/<%= track.id %>"><%= track.name %></a>
                                                                    </li>
                                                                <% }); %>
                                                            </ul>
                                                        </div>
        
                                                        <!-- Ajoutez un bouton "Afficher plus" -->
                                                        <div class="btn-center-div">
                                                            <button class="show-more-button" onclick="toggleTracks(this)">
                                                                <div class="button-content">
                                                                    <span>Afficher plus</span>
                                                                    <i class="material-icons" id="arrow-icon">keyboard_arrow_down</i>
                                                                </div>
                                                            </button>
                                                        </div>
                                                    <% } %>
                                                </div>
                                            </div>
                                        </div>
                                    <% } else {%>
                                    <% } %>
                                <% }); %>
                            <% } %>
                        <% } %>
                    <% }); %>
                </div>
            </div>
        </main>

        <style>
            .track-image-details {
              position: relative;
              /* width: 500px;
              height: 300px; */
              background: no-repeat center center;
              background-image: url('../images/svg/MagicPattern.design.svg');
              background-size: cover;
            }
    
            .track-image-details::after {
              content: "";
              position: absolute;
              width: 100%;
              height: 100%;
              backdrop-filter: blur(10px);
              pointer-events: none;
            }
          </style>

        <script>
            function toggleTracks(button) {
                const parentSection = button.closest('.tracks-section'); // Trouve la section parente du bouton
                const hiddenTracks = parentSection.querySelector('.hidden-tracks'); // Sélectionne la section des pistes cachées à l'intérieur de la section parente
                const arrowIcon = button.querySelector('#arrow-icon');


                if (hiddenTracks.style.maxHeight) {
                    // La div est actuellement étendue, rétractez-la
                    hiddenTracks.style.maxHeight = null;
                    button.innerHTML = '<i class="material-icons" id="arrow-icon">keyboard_arrow_down</i> Afficher plus';
                } else {
                    // La div est actuellement rétractée, étendez-la
                    hiddenTracks.style.maxHeight = hiddenTracks.scrollHeight + 'px';
                    button.innerHTML = '<i class="material-icons" id="arrow-icon">keyboard_arrow_up</i> Réduire';
                }
            }
                
                document.addEventListener("DOMContentLoaded", function () {
                
                    // Sélectionnez toutes les divs avec la classe "checkbox-container"
                    const checkboxContainers = document.querySelectorAll('.checkbox-container');

                    // Parcourez chaque div
                    checkboxContainers.forEach(function (container) {
                        // Récupérez l'ID de la checkbox associée à cette div
                        const containerId = container.id.slice(0, -17);

                        const containerIdChanged = containerId + "containerCheckbox";

                        console.log(containerId + " " + containerIdChanged);

                        // Ajoutez un gestionnaire d'événements pour le clic sur la div
                        container.addEventListener('click', function () {
                            // Récupérez la checkbox correspondante
                            const checkbox = document.getElementById(containerIdChanged);

                            // Inversez l'état de la checkbox
                            checkbox.checked = !checkbox.checked;

                            updateDisplay(`${containerId}container`, `${containerId}CheckboxContainer`);
                        });
                    });
                    // Fonction pour mettre à jour l'affichage en fonction de l'état des cases à cocher
                    function updateDisplay(id, containerId) {
                        console.log(id);
                        // Récupérer l'état de la case à cocher correspondante
                        const checkbox = document.getElementById(`${id.toLowerCase()}Checkbox`);
                        const container = document.getElementById(containerId);
                        
                        // Afficher ou masquer la div en fonction de l'état de la case à cocher
                        document.getElementById(id).style.display = checkbox.checked ? 'block' : 'none';
                        // Mettre à jour l'opacité en fonction de la sélection
                        container.style.opacity = checkbox.checked ? 1 : 0.5;
                    }
            });
            
            // Au clic sur l'icône pour ajouter à la playlist
            // document.getElementById('yourAddToPlaylistIconId').addEventListener('click', async () => {
            
            // playlistUtils.js

            document.getElementById('yourAddToPlaylistIconId').addEventListener('click', async () => {
                try {
                    // Effectuez une requête vers la route côté serveur pour vérifier l'existence de la playlist
                    const response = await fetch('/check-playlist');
                    const result = await response.json();
                    console.log("result :" + result);

                    if (result.exists) {
                        // La playlist existe, vous pouvez ajouter la musique à la playlist ici
                        console.log('La playlist existe, ajoutez la musique à la playlist.');
                    } else {
                        // La playlist n'existe pas, vous pouvez la créer et ajouter la musique
                        console.log('La playlist n\'existe pas, créez la playlist et ajoutez la musique.');
                    }
                } catch (error) {
                    console.error('Erreur lors de la vérification de l\'existence de la playlist :', error);
                }
            });

            // const addTracksToPlaylist = async (accessToken, trackIds) => {
            //     try {
            //         // Effectuez une requête vers la route côté serveur pour vérifier l'existence de la playlist
            //         const response = await fetch(`/check-playlist`);
            //         const result = await response.json();
            //         const playlistId = 0;

            //         if (result.exists) {
            //             // La playlist existe, vous pouvez ajouter la musique à la playlist ici
            //             console.log('La playlist existe, ajoutez la musique à la playlist.');
            //             // Ajoutez ici la logique pour ajouter la musique à la playlist existante

            //             const playlistId = result.exists.id;
            //             console.log(playlistId);
            //         } else {
            //             // La playlist n'existe pas, vous pouvez la créer et ajouter la musique
            //             console.log('La playlist n\'existe pas, créez la playlist et ajoutez la musique.');
                        
            //             // Effectuez une nouvelle requête pour créer la playlist
            //             const createPlaylistResponse = await fetch('/create-playlist', { 
            //                 method: 'POST',
            //                 headers: {
            //                     'Content-Type': 'application/json',
            //                 },
            //                 body: JSON.stringify({ playlistId }),
            //             });
                        
            //             const createPlaylistResult = await createPlaylistResponse.json();

            //             if (createPlaylistResult.success) {
            //                 console.log('Playlist créée avec succès. Ajoutez la musique à la playlist.');
            //                 // Ajoutez ici la logique pour ajouter la musique à la playlist nouvellement créée
            //             } else {
            //                 console.error('Erreur lors de la création de la playlist :', createPlaylistResult.error);
            //             }
            //         }
            //         // Ajoutez les pistes à la playlist
            //         const addTracksResponse = await fetch('/add-tracks', {
            //             method: 'POST',
            //             headers: {
            //                 'Content-Type': 'application/json',
            //             },
            //             body: JSON.stringify({ playlistId, trackIds }),
            //         });
            //         const addTracksResult = await addTracksResponse.json();

            //         if (addTracksResult.success) {
            //             console.log('Pistes ajoutées avec succès à la playlist');
            //         } else {
            //             console.error('Erreur lors de l\'ajout des pistes à la playlist:', addTracksResult.error);
            //         }
            //     } catch (error) {
            //         console.error('Erreur lors de la vérification de l\'existence de la playlist :', error);
            //     }
            // };

            async function addAlbumToPlaylist(album_Id) {
                    try {
                        let playlistId = 0;
                    // Effectuez une requête vers la route côté serveur pour vérifier l'existence de la playlist
                        const response_check = await fetch(`/check-playlist`);
                        const result_check = await response_check.json();

                        console.log(result_check);

                        if (result_check.exists) {
                            // La playlist existe, vous pouvez ajouter la musique à la playlist ici
                            console.log('La playlist existe, ajoutez la musique à la playlist.');
                            // Ajoutez ici la logique pour ajouter la musique à la playlist existante

                            playlistId = result_check.exists.id;
                            console.log(playlistId);
                        } else {
                            // La playlist n'existe pas, vous pouvez la créer et ajouter la musique
                            console.log('La playlist n\'existe pas, créez la playlist et ajoutez la musique.');

                            // Effectuez une nouvelle requête pour créer la playlist
                            const createPlaylistResponse = await fetch('/create-playlist', {
                                method: 'POST',
                                headers: {
                                'Content-Type': 'application/json',
                                },
                                body: JSON.stringify({ playlistId }),
                            });

                            const createPlaylistResult = await createPlaylistResponse.json();
                            console.log(createPlaylistResult);
                            playlistId = createPlaylistResult.playlist.id;

                            if (createPlaylistResult.success) {
                                
                                console.log('Playlist créée avec succès. Ajoutez la musique à la playlist.');

                            } else {
                                console.error('Erreur lors de la création de la playlist :', createPlaylistResult.error);
                            }
                        }

                        // Utilisez fetch pour appeler la nouvelle route sans recharger la page
                        const response = await fetch('/add-album-to-playlist', {
                            method: 'POST',
                            headers: {
                            'Content-Type': 'application/json',
                            },
                            body: JSON.stringify({
                            albumId: album_Id,
                            playlistId : playlistId, // Remplacez par l'ID de l'album que vous souhaitez ajouter
                            }),
                        });

                        const result = await response.json();
                    
                    // Vous pouvez ajouter ici du code pour gérer la réponse si nécessaire
                    } catch (error) {
                    console.error('Erreur lors de l\'ajout de l\'album à la playlist : ', error);
                    // Vous pouvez ajouter ici du code pour gérer les erreurs si nécessaire
                    }
                }
        </script>
        

        <!-- Compiled and minified JavaScript -->
        <script src="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/js/materialize.min.js"></script>

</body>

</html>

