<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Search</title>
    <!-- <link rel="stylesheet" href="/css/main.css">
    <link rel="stylesheet" href="/css/home.css"> -->
    <link rel="stylesheet" href="/css/h.css">
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css" />

</head>

<body>

    <%- include('header.ejs') %>
        <main>
            <div class="form__group field">
                <input type="input" class="form__field" placeholder="Rechercher..." name="name" id='search-input' />
                <label for="name" class="form__label">Rechercher...</label>
            </div>

            <div>
                <div id="results-artists-container" class="artists-container"></div>

                <div id="results-container" class="tracks-container"></div>
            </div>
        </main>

        <script>
            // Écoutez les changements dans le champ de recherche
            document.querySelector('#search-input').addEventListener('input', function (event) {
                const query = event.target.value;

                // Vérifiez si la requête est assez longue pour valider la recherche
                if (query.length >= 3) {
                    searchSpotify(query);
                }
            });

            // Fonction pour effectuer la recherche Spotify
            function searchSpotify(query) {
                const apiUrl = `https://api.spotify.com/v1/search?q=${query}&type=track,artist&limit=10&market=FR`;

                fetch(apiUrl, {
                    method: 'GET',
                    headers: {
                        'Authorization': `Bearer <%= accessToken %>`
                    }
                })
                    .then(response => response.json())
                    .then(data => {
                        // Traitez les données de réponse et mettez à jour l'interface utilisateur
                        displaySearchResults(data);
                    })
                    .catch(error => console.error('Erreur lors de la recherche Spotify:', error));
            }

            // Fonction pour afficher les résultats de la recherche
            function displaySearchResults(data) {
                const resultsContainer = document.querySelector('#results-container');
                const artistsContainer = document.querySelector('#results-artists-container');
                resultsContainer.innerHTML = '';
                artistsContainer.innerHTML = '';

                const tracks = data.tracks.items;

                tracks.forEach(track => {
                    const trackElement = document.createElement('div');
                    trackElement.classList.add('track');

                    const trackImage = document.createElement('div');
                    trackImage.classList.add('track-image');
                    const trackImageTag = document.createElement('img');
                    trackImageTag.src = track.album.images[0].url;
                    trackImageTag.alt = track.name;
                    trackImage.appendChild(trackImageTag);

                    const trackInfo = document.createElement('div');
                    trackInfo.classList.add('track-info');

                    const trackNameLink = document.createElement('a');
                    trackNameLink.href = `/track/${track.id}`;
                    const trackName = document.createElement('h2');
                    trackName.innerText = track.name;
                    trackNameLink.appendChild(trackName);

                    const trackArtists = document.createElement('p');
                    trackArtists.innerText = track.artists.map(artist => artist.name).join(', ');

                    trackInfo.appendChild(trackNameLink);
                    trackInfo.appendChild(trackArtists);

                    const trackDuration = document.createElement('div');
                    trackDuration.classList.add('track-duration');

                    const durationMs = track.duration_ms;
                    const durationSeconds = Math.floor(durationMs / 1000);
                    const minutes = Math.floor(durationSeconds / 60);
                    const seconds = durationSeconds % 60;
                    trackDuration.innerText = `${minutes}:${seconds.toString().padStart(2, '0')}`;

                    trackElement.appendChild(trackImage);
                    trackElement.appendChild(trackInfo);
                    trackElement.appendChild(trackDuration);

                    resultsContainer.appendChild(trackElement);
                });

                const artists = data.artists.items;

                artists.forEach(artist => {
                    const artistElement = document.createElement('div');
                    artistElement.classList.add('artist');

                    const artistName = document.createElement('h2');
                    artistName.classList.add('artist-name');
                    artistName.innerText = artist.name;

                    const artistImage = document.createElement('div');
                    artistImage.classList.add('artist-image');
                    // Vérifier si la piste a des images
                    if (artist.images.length > 0) {
                        const artistImageTag = document.createElement('img');
                        artistImageTag.src = artist.images[0].url;
                        artistImageTag.alt = artist.name;
                        artistImage.appendChild(artistImageTag);
                    }

                    else{
                        const artistImageTag = document.createElement('img');
                        artistImageTag.src = "../images/user-defaut-pp.jpg";
                        artistImageTag.alt = artist.name;
                        artistImage.appendChild(artistImageTag);
                    }

                    artistElement.appendChild(artistImage);
                    artistElement.appendChild(artistName);
                    

                    artistsContainer.appendChild(artistElement);
                });
            }
        </script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/js/materialize.min.js"></script>


</body>

</html>